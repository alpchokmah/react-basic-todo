{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alona/dev/todoist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  _s();\n\n  //Use effects\n  useEffect(() => {}, [todos]); //States\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Let's get something done!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      inputText: inputText,\n      todos: todos,\n      setTodos: setTodos,\n      setInputText: setInputText,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      setTodos: setTodos,\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zBk2fD5cbXl6lIZGXUeBpFPJ9B8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/alona/dev/todoist/src/App.js"],"names":["React","useState","useEffect","Form","TodoList","App","todos","inputText","setInputText","setTodos","status","setStatus","filteredTodos","setFilteredTodos","filterHandler","filter","todo","completed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACAH,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACI,KAAD,CAFM,CAAT,CAFa,CAMb;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQG,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMa,aAAa,GAAG,MAAM;AAC1B,YAAOJ,MAAP;AACE,WAAK,WAAL;AACEG,QAAAA,gBAAgB,CAACP,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,IAAxC,CAAD,CAAhB;AACA;;AACF,WAAK,aAAL;AACEJ,QAAAA,gBAAgB,CAACP,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,KAAxC,CAAD,CAAhB;AACA;;AACF;AACEJ,QAAAA,gBAAgB,CAACP,KAAD,CAAhB;AACA;AATJ;AAWD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,eAIE,QAAC,IAAD;AACI,MAAA,SAAS,EAAEC,SADf;AAEI,MAAA,KAAK,EAAED,KAFX;AAGI,MAAA,QAAQ,EAAEG,QAHd;AAII,MAAA,YAAY,EAAED,YAJlB;AAKI,MAAA,SAAS,EAAIG;AALjB;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF,QAApB;AAA8B,MAAA,KAAK,EAAEH;AAArC;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzCQD,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //Use effects\n  useEffect(() => {\n\n  }, [todos]);\n\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n    \t<header> \n      \t<h1>Let's get something done!</h1>\n      </header>\n      <Form \n          inputText={inputText} \n          todos={todos} \n          setTodos={setTodos} \n          setInputText={setInputText}\n          setStatus = {setStatus}\n      />\n      <TodoList setTodos={setTodos} todos={todos} />\n    </div> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}